---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import SectionContainer from "../components/SectionContainer.astro";

import { useTranslations } from "@/i18n";

const t = useTranslations();

type Props = {
  title: string;
  description: string;
  titleTemplate?: string;
  robots?: string;
  article?: {
    publishedTime: Date;
    modifiedTime?: Date;
    authors: string[];
    authorTwitter?: string;
    tags: string[];
    cover: CollectionEntry<"blog">["data"]["cover"];
  };
};
---

<html lang={t("siteMetadata.language")} class="scroll-smooth">
  <BaseHead {...Astro.props} />
  <body
    class="bg-white text-black antialiased dark:bg-gray-950 dark:text-white"
  >
    <SectionContainer>
      <div class="flex h-screen flex-col justify-between font-sans">
        <Header />
        <main class="mb-auto">
          <slot />
        </main>
        <Footer />
      </div>
    </SectionContainer>
    <script>
      let copyButtonLabel = "Copy Code";
      let codeBlocks = Array.from(document.querySelectorAll("pre"));
    
      for (let codeBlock of codeBlocks) {
        let wrapper = document.createElement("div");
        wrapper.style.position = "relative";
    
        let copyButton = document.createElement("button");
        copyButton.className = "copy-code";
        copyButton.innerHTML = copyButtonLabel;
    
        codeBlock.setAttribute("tabindex", "0");
        codeBlock.appendChild(copyButton);
        // wrap codebock with relative parent element
        codeBlock.parentNode.insertBefore(wrapper, codeBlock);
        wrapper.appendChild(codeBlock);
    
        copyButton.addEventListener("click", async () => {
          await copyCode(codeBlock, copyButton);
        });
      }
    
      async function copyCode(block, button) {
        let code = block.querySelector("code");
        let text = code.innerText;
    
        await navigator.clipboard.writeText(text);
    
        // visual feedback that task is completed
        button.innerText = "Code Copied";
    
        setTimeout(() => {
          button.innerText = copyButtonLabel;
        }, 700);
      }
    </script>
    
    <slot />
    </body>
</html>
